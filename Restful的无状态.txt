test"Statelessness" 是restful风格最重要的原则。它的含义是指，客户端和服务器交互的过程中（各次请求之间）是无状态的。  无状态是针对于“状态”来说的。 一个WEB应用协议中的“状态”指的是，为两个相互关联的用户交互操作保留某种公共信息，例如用户登录信息，工作流等。 这些信息具有不同作用域，如page，request，session，application等。通常由服务器负责保存这些信息。 
     “无状态” 的概念逐渐流行，得益于分布式系统的发展。首先，无状态请求易于实现负载均衡。在分布式web系统下，有多个可用服务器，每个服务器都可以处理客户端请求。 传统的有状态请求，因为状态信息只保存在第一次发起请求的那台服务器上，之后的请求都只能由这台服务器来处理，服务器无法自由调度请求。无状态请求则完全没有这个限制。其次，无状态请求有较强的容错性和可伸缩性。如果一台服务器宕机，无状态请求可以透明地交由另一台可用服务器来处理，而有状态的请求则会因为存储请求状态信息的服务器宕机而承担状态丢失的风险。
     需要注意的是，“状态"指请求的状态，而不是资源的状态。Restful风格的无状态约束要求服务器不保存请求状态，如果确实需要维持用户状态，也应由客户端负责。传递user credentials 是Restful的，而传递sessionID是unRestful的,因为session信息保存在服务器端。
     通用的搜索引擎，是无状态架构的范例。Restful的搜索接口特别适用。